<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ assembly name="$(ProjectDir)\ToolsForDesignTimeOnly\DTOGen.dll" #>
<#
// Open the json doc.
string json = File.ReadAllText(this.Host.ResolvePath("annuairetypes.json.txt"));
var types = new DTOGen.Json.JsonTypeParser().LoadTypes(json);
#>
using System.Collections.Generic;

/*
 * The code below was generated by a tool
 *
 *
 */
namespace DTOGen.Examples
{
// ReSharper disable InconsistentNaming
<#
 foreach (var typeDef in types)
 {
#>
	public partial class <#= typeDef.TypeName #> 
	{
		public <#= typeDef.TypeName #>()
	    {
<#
foreach(var prop in typeDef.Properties.Where(p=> p.IsCollection))
{
#>
			<#=prop.Name#> = new List<<#=prop.Type#>>();
<#
}#>
	    }

<#
foreach(var prop in typeDef.Properties)
{
	if(prop.IsCollection){
#>
		public List<<#=prop.Type#>> <#=prop.Name#> { get; private set; }
<#
	}else{
#>
		public <#=prop.Type#> <#=prop.Name#> { get; set; }
<#
	}
} // end foreach property
#>
	} // end class

<#
 } // end for each class
#>
// ReSharper restore InconsistentNaming
} // end namespace